name: CI
on:
  push:
    branches: ["main"]

jobs:
  build:
    environment: main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Connect to Dockerhub
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: ./back-end
          file: ./back-end/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest

  deployment:
    needs: build
    environment: production
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v2 

      - name: SSH into VPS and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            whoami
            docker container stop ${{ vars.CONTAINER_NAME }} || true
            docker container rm ${{ vars.CONTAINER_NAME }} || true
            docker image rm -f ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }} || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest
            docker run -d -p 5001:5001 --name ${{ vars.CONTAINER_NAME }} \
              -e MONGODB_URL="${{ secrets.MONGODB_URL }}" \
              -e PORT="${{ secrets.PORT }}" \
              -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              -e VAPID_PUBLIC_KEY="${{ secrets.VAPID_PUBLIC_KEY }}" \
              -e VAPID_PRIVATE_KEY="${{ secrets.VAPID_PRIVATE_KEY }}" \
              -e FRONTEND_ORIGIN="${{ secrets.FRONTEND_ORIGIN }}" \
              ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest
              